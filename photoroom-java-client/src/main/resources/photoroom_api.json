{
  "openapi": "3.1.0",
  "info": {
    "title": "Photoroom API",
    "version": "1.0.0",
    "description": "The power of Photoroom, automated.",
    "contact": {
      "name": "Photoroom API Team",
      "email": "api-help@photorom.com",
      "url": "https://photoroom.com/api"
    },
    "termsOfService": "https://www.photoroom.com/legal/terms-and-conditions"
  },
  "security": [
    {
      "x-api-key": []
    }
  ],
  "servers": [
    {
      "url": "https://image-api.photoroom.com",
      "description": "Production server (Plus plan)"
    },
    {
      "url": "https://sdk.photoroom.com",
      "description": "Production server (Basic plan)"
    }
  ],
  "components": {
    "securitySchemes": {
      "x-api-key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header",
        "description": "Get you API Key [here](https://app.photoroom.com/api-dashboard)"
      }
    },
    "schemas": {
      "image-response": {
        "type": "string",
        "description": "The resulting image after rendering",
        "title": "Resulting image",
        "format": "binary"
      },
      "payment-error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "detail": {
                "type": "string",
                "description": "The details of the error",
                "title": "Details",
                "example": "API credits exhausted. Visit https://app.photoroom.com/api-dashboard to purchase more API credits"
              }
            },
            "required": [
              "detail"
            ]
          }
        },
        "required": [
          "error"
        ],
        "title": "Payment Error"
      },
      "unknown-error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "The message describing the error",
                "title": "Message",
                "example": "An unexpected error occurred. Please try again later or contact support."
              }
            },
            "required": [
              "message"
            ]
          }
        },
        "required": [
          "error"
        ],
        "title": "Unknown Error"
      },
      "edit-image-bad-request": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "The message describing the error",
                "title": "Message",
                "example": "removeBackground must be boolean"
              }
            },
            "required": [
              "message"
            ]
          }
        },
        "required": [
          "error"
        ],
        "title": "Invalid value"
      },
      "remove-background-post-params": {
        "type": "object",
        "properties": {
          "image_file": {
            "type": "string",
            "description": "The image file to render",
            "title": "Image File",
            "format": "binary"
          },
          "format": {
            "type": "string",
            "default": "png",
            "description": "The format of the resulting image",
            "title": "Format",
            "enum": [
              "png",
              "jpg",
              "webp"
            ]
          },
          "channels": {
            "type": "string",
            "default": "rgba",
            "description": "The channels of the resulting image",
            "title": "Channels",
            "enum": [
              "rgba",
              "alpha"
            ]
          },
          "bg_color": {
            "type": "string",
            "description": "The background color of the resulting image. Can be a hex code (`#FF00FF`) or a HTML color (`red`, `green`, etc.)",
            "title": "Background Color"
          },
          "size": {
            "type": "string",
            "default": "full",
            "description": "Will resize the output to the specified size. Can be `preview` (0.25 Megapixels), `medium` (1.5 MP), `hd` (4 MP) or `full` (36 MP, can be slower for large images). Useful for mobile apps that need smaller images.",
            "title": "Size",
            "enum": [
              "preview",
              "medium",
              "hd",
              "full"
            ]
          },
          "crop": {
            "type": "string",
            "default": "false",
            "description": "If `true`, the image returned is cropped to the cutout border. Transparent pixels are removed from the border",
            "title": "Crop",
            "enum": [
              "true",
              "false"
            ]
          },
          "despill": {
            "type": "string",
            "default": "false",
            "description": "If `true`, automatically removes colored reflections that have been left on the main subject by a green background.",
            "title": "Green screen despilling",
            "enum": [
              "true",
              "false"
            ]
          }
        },
        "title": "Remove Background POST params"
      },
      "render-image-post-params": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "string",
            "description": "The ID of the template to render",
            "title": "Template ID",
            "example": "592dd982-4a1b-4cd9-ab11-21481d5a0064"
          },
          "imageFile": {
            "type": "string",
            "description": "The image file to render",
            "title": "Image File",
            "format": "binary"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri",
            "description": "Deprecated, use `imageFile` instead.",
            "title": "Image URL",
            "example": "https://s3.amazonaws.com/a.storyblok.com/f/191576/1024x1024/d25e1a99d7/sample-05.png",
            "deprecated": true
          }
        },
        "required": [
          "templateId"
        ],
        "title": "Render image POST params"
      }
    },
    "parameters": {}
  },
  "paths": {
    "/v1/segment": {
      "post": {
        "operationId": "remove-background",
        "summary": "Remove Background (Basic plan)",
        "description": "Remove background from an image",
        "servers": [
          {
            "url": "https://sdk.photoroom.com"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/remove-background-post-params"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "x-uncertainty-score": {
                "schema": {
                  "summary": "The uncertainty score of the cutout",
                  "description": "The uncertainty score is a number between 0 and 1. 0 means the model is very confident that the cutout is accurate, 1 means the model is unsure. For instance, shoes on a shoe box might give a higher uncertainty score as the model is unsure what to segment (shoes, box or both). Currently the model returns an uncertainty score only for images of objects. If an image contains humans, it will return the value -1."
                }
              }
            },
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "description": "The resulting image after rendering",
                  "title": "Resulting image",
                  "format": "binary"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "base64img": {
                      "type": "string",
                      "title": "Base64 encoded image",
                      "format": "base64"
                    }
                  },
                  "required": [
                    "base64img"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "The details of the error",
                      "title": "Details",
                      "example": "Please provide an image."
                    },
                    "status_code": {
                      "type": "number",
                      "description": "The status code of the error",
                      "title": "Status Code",
                      "example": 400
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the error",
                      "title": "Type",
                      "example": "missing_image"
                    }
                  },
                  "required": [
                    "detail",
                    "status_code",
                    "type"
                  ],
                  "title": "Field Missing Error"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "The details of the error",
                      "title": "Details",
                      "example": "Please provide an image."
                    },
                    "status_code": {
                      "type": "number",
                      "description": "The status code of the error",
                      "title": "Status Code",
                      "example": 400
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the error",
                      "title": "Type",
                      "example": "missing_image"
                    }
                  },
                  "required": [
                    "detail",
                    "status_code",
                    "type"
                  ],
                  "title": "Field Missing Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v1/account": {
      "get": {
        "operationId": "account-details",
        "summary": "Account Details",
        "description": "Get current account details, including remaining credits balance and monthly quota",
        "servers": [
          {
            "url": "https://image-api.photoroom.com"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credits": {
                      "type": "object",
                      "properties": {
                        "available": {
                          "type": "number",
                          "description": "The number of credits available",
                          "title": "Available",
                          "example": 100
                        },
                        "subscription": {
                          "type": "number",
                          "description": "The number of credits available in the subscription",
                          "title": "Subscription",
                          "example": 100,
                          "minimum": 0
                        }
                      },
                      "required": [
                        "available",
                        "subscription"
                      ]
                    }
                  },
                  "required": [
                    "credits"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "The message describing the error",
                          "title": "Message",
                          "example": "apiKey: Required"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "Field Missing Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/v2/edit": {
      "get": {
        "summary": "Image Editing v2 (Plus plan)",
        "description": "This endpoint processes an image, removing the background if specified, and applies various transformations such as scaling, padding, and margin adjustments. It accepts a URL input for the image. If you want to directly upload an image file, please use the POST endpoint. For more details on the difference between the GET and POST endpoints, please have a look at our documentation: https://docs.photoroom.com/image-editing-api/which-endpoints-are-available. The output size, background color or image, and other parameters can be customized.",
        "servers": [
          {
            "url": "https://image-api.photoroom.com"
          }
        ],
        "parameters": [
          {
            "name": "background.color",
            "in": "query",
            "description": "Color of the background. If omitted, background will be transparent unless `background.imageUrl` or `background.imageFile` is provided.\nCan be a hex color without the hash sign (example: `FF0000`, `FF0000EE`) or color name (examples: `red`, `blue`)\n\nCan't be provided if `removeBackground` is set to `false`",
            "schema": {
              "default": "transparent",
              "examples": [
                "#FF0000",
                "red"
              ],
              "type": "string"
            }
          },
          {
            "name": "background.expandPrompt",
            "in": "query",
            "description": "If `ai.auto`, a pre-processing step is applied to expand the prompt into a longer form.\n\n`auto` and `never` are legacy values that will be removed in the next major version.",
            "schema": {
              "anyOf": [
                {
                  "properties": {
                    "mode": {
                      "description": "If `ai.auto`, a pre-processing step is applied to expand the prompt into a longer form.\n\nExample: original prompt `\"on a beach\"`, expanded prompt: `\"An object rests on the sandy shore of a tranquil beach. The object, partially covered in sand, casts a soft shadow under the warm sunlight. Seashells and driftwood are scattered around, with gentle waves lapping at the shore in the background, creating a serene coastal scene.\"`\n\n(Note: `background.expandPrompt.mode` only affects `background.prompt`)",
                      "enum": [
                        "ai.auto",
                        "ai.never"
                      ],
                      "examples": [
                        "ai.auto",
                        "ai.never"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "mode"
                  ],
                  "type": "object"
                },
                {
                  "enum": [
                    "auto",
                    "never"
                  ],
                  "type": "string"
                }
              ]
            }
          },
          {
            "name": "background.guidance.imageFile",
            "in": "query",
            "description": "Bytes of the image to use as a background image guidance. Only available in the POST request\n\nCan't be provided if `removeBackground` is set to `false`\n\nThe maximum size of the image is 30MB.",
            "schema": {
              "format": "binary",
              "type": "string"
            }
          },
          {
            "name": "background.guidance.imageUrl",
            "in": "query",
            "description": "URL of the image to use as a background image guidance.\n\nCan't be provided if `removeBackground` is set to `false`\n\nThe maximum size of the image is 30MB.",
            "schema": {
              "examples": [
                "https://example.com/image.jpg"
              ],
              "type": "string"
            }
          },
          {
            "name": "background.guidance.scale",
            "in": "query",
            "description": "How closely the generated background will be matching the guiding image, between 0 and 1.\n\nA value of 1 means it will match the guiding image as much as possible, a value of 0 means the guiding image will be ignored.\n\n(Only working when using the [new model](https://docs.photoroom.com/image-editing-api-plus-plan/ai-backgrounds#important-model-selection))",
            "schema": {
              "default": 0.6,
              "examples": [
                "0.6"
              ],
              "maximum": 1,
              "type": "number"
            }
          },
          {
            "name": "background.imageUrl",
            "in": "query",
            "description": "URL of the image to use as a background.\n\nCan't be provided if `removeBackground` is set to `false`\n\nThe maximum size of the image is 30MB.\n\nIf `background.imageUrl` is provided, neither `background.imageFile` nor `background.prompt` can be provided, and vice versa.",
            "schema": {
              "examples": [
                "https://example.com/image.jpg"
              ],
              "type": "string"
            }
          },
          {
            "name": "background.negativePrompt",
            "in": "query",
            "description": "(LEGACY) This parameter will only have an effect when using the previous AI Backgrounds model,\nwhich is used when setting the header: `pr-ai-background-model-version: 2`\n\nA negative prompt to use for guiding the background generation process;\nIf provided, the generation algorithm will try to avoid properties listed in the negativePrompt.",
            "schema": {
              "examples": [
                "a red background"
              ],
              "type": "string"
            }
          },
          {
            "name": "background.prompt",
            "in": "query",
            "description": "Prompt to use for guiding the background generation process.\n\nTips for writing high-quality prompts are available [in our documentation](https://docs.photoroom.com/image-editing-api-plus-plan/ai-backgrounds#how-to-write-a-high-quality-prompt).\n\nIf `background.prompt` is provided, neither `background.imageUrl` nor `background.imageFile` can be provided, and vice versa.",
            "schema": {
              "examples": [
                "a blue sky",
                "a blue sky with a white cloud"
              ],
              "type": "string"
            }
          },
          {
            "name": "background.scaling",
            "in": "query",
            "description": "Whether the background should fit or fill (default) the output image\nIf set to `fit`, the empty pixels will be transparent\n\nCan only be provided if `background.imageUrl` or `background.imageFile` is provided",
            "schema": {
              "default": "fill",
              "enum": [
                "fill",
                "fit"
              ],
              "examples": [
                "fit",
                "fill"
              ],
              "type": "string"
            }
          },
          {
            "name": "background.seed",
            "in": "query",
            "description": "Seed used to generate the background. Can be used to get similar looking results for the same prompt.",
            "schema": {
              "examples": [
                "123456"
              ],
              "type": "number"
            }
          },
          {
            "name": "expand.mode",
            "in": "query",
            "description": "Expand mode to use on the main image used by the API.\n\nIf set to `ai.auto`, all transparent pixels will automatically be filled based on the content of the current background (either the original background, if `removeBackground` has been set to `false`, or a static background, if `background.imageUrl` has been provided)\n\nExpand will rely on output size, subject position, and fitting mode.",
            "schema": {
              "const": "ai.auto",
              "examples": [
                "ai.auto"
              ],
              "type": "string"
            }
          },
          {
            "name": "expand.seed",
            "in": "query",
            "description": "Seed used to generate the background. Can be used to get similar looking results for the same prompt.",
            "schema": {
              "examples": [
                "123456"
              ],
              "type": "number"
            }
          },
          {
            "name": "export.format",
            "in": "query",
            "description": "The format of the result image.\n\nDefault value is \"png\".",
            "schema": {
              "default": "png",
              "enum": [
                "jpeg",
                "jpg",
                "png"
              ],
              "examples": [
                "png",
                "jpeg",
                "jpg"
              ],
              "type": "string"
            }
          },
          {
            "name": "horizontalAlignment",
            "in": "query",
            "description": "[Advanced] Defines the horizontal alignment of the cutout subject within its bounding box.\n\nSpecifying a custom horizontal alignment will implicitly set `ignorePaddingAndSnapOnCroppedSides` to `false` for the horizontal direction.",
            "schema": {
              "enum": [
                "center",
                "left",
                "right"
              ],
              "examples": [
                "left",
                "center",
                "right"
              ],
              "type": "string"
            }
          },
          {
            "name": "ignorePaddingAndSnapOnCroppedSides",
            "in": "query",
            "description": "If set to `true` (default), cropped sides of the subject will snap to the edges\nFor instance, for a portrait image cropped below the elbows, the subject will be aligned at the bottom\neven if a bottom padding is provided (but it will still respect bottom margin)\n\nCan't be provided if `removeBackground` is set to `false`\n\n(See positioning section of the documentation for more information)",
            "schema": {
              "default": true,
              "examples": [
                "true",
                "false"
              ],
              "type": "boolean"
            }
          },
          {
            "name": "imageUrl",
            "in": "query",
            "description": "URL of the main image used by the API. The GET endpoint accepts `imageUrl` only.\n\nThe maximum size of the image is 30MB.\n\nIf you want to directly upload an image file, please instead use the POST endpoint with the argument `imageFile`.",
            "schema": {
              "examples": [
                "https://example.com/image.jpg"
              ],
              "type": "string"
            }
          },
          {
            "name": "lighting.mode",
            "in": "query",
            "description": "Lighting mode to use on the main image used by the API.\nIf set to `ai.auto`, the lighting will be automatically adjusted",
            "schema": {
              "const": "ai.auto",
              "examples": [
                "ai.auto"
              ],
              "type": "string"
            }
          },
          {
            "name": "margin",
            "in": "query",
            "description": "General margin around the subject. Can be expressed as a number between 0 and 0.49,\na percentage string between 0% and 49% (e.g., \"30%\"), or a pixel value string (e.g., \"100px\").\nUnlike `padding`, margin is never ignored even on cropped sides of the subject.\nExpressed in a ratio of the output image size.\nSee positioning section of the documentation for more information.\n\nTips to assist with positioning are available [in our documentation](https://docs.photoroom.com/image-editing-api-plus-plan/positioning).",
            "schema": {
              "default": 0,
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "marginBottom",
            "in": "query",
            "description": "Bottom Margin, overrides general margin on the bottom side. Accepts the same formats as `margin`.",
            "schema": {
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "marginLeft",
            "in": "query",
            "description": "Left Margin, overrides general margin on the left side. Accepts the same formats as `margin`.",
            "schema": {
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "marginRight",
            "in": "query",
            "description": "Right Margin, overrides general margin on the right side. Accepts the same formats as `margin`.",
            "schema": {
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "marginTop",
            "in": "query",
            "description": "Top Margin, overrides general margin on the top side. Accepts the same formats as `margin`.",
            "schema": {
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "maxHeight",
            "in": "query",
            "description": "Maximum output height. Can only be provided if `outputSize` is `originalImage` or `croppedSubject`.\nUseful for: redimensioning while keeping the aspect ratio",
            "schema": {
              "examples": [
                "200"
              ],
              "type": "number"
            }
          },
          {
            "name": "maxWidth",
            "in": "query",
            "description": "Maximum output width. Can only be provided if `outputSize` is `originalImage` or `croppedSubject`.\nUseful for: resizing an image while keeping the aspect ratio",
            "schema": {
              "examples": [
                "200"
              ],
              "type": "number"
            }
          },
          {
            "name": "outputSize",
            "in": "query",
            "description": "Output size of the image. In the form of either:\n- `widthxheight` for a custom size (example: `200x400`)\n- `originalImage` to keep the original image dimensions\n- `croppedSubject` to use the size of the foreground dimensions after cropping around it",
            "schema": {
              "examples": [
                "200x400",
                "originalImage",
                "croppedSubject"
              ],
              "pattern": "^(\\d+x\\d+|originalImage|croppedSubject)$",
              "type": "string"
            }
          },
          {
            "name": "padding",
            "in": "query",
            "description": "General padding around the subject. Can be expressed as a number between 0 and 0.49,\na percentage string between 0% and 49% (e.g., \"30%\"), or a pixel value string (e.g., \"100px\").\nUnlike `margin`, padding will be ignored on cropped sides of the subject if that option is enabled.\nExpressed in a ratio of the size of the document, minus margins (similar to CSS).\nSee positioning section of the documentation for more information.\n\nTips to assist with positioning are available [in our documentation](https://docs.photoroom.com/image-editing-api-plus-plan/positioning).",
            "schema": {
              "default": 0,
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "paddingBottom",
            "in": "query",
            "description": "Bottom padding, overrides general padding on the bottom side. Accepts the same formats as `padding`.",
            "schema": {
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "paddingLeft",
            "in": "query",
            "description": "Left padding, overrides general padding on the left side. Accepts the same formats as `padding`.",
            "schema": {
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "paddingRight",
            "in": "query",
            "description": "Right padding, overrides general padding on the right side. Accepts the same formats as `padding`.",
            "schema": {
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "paddingTop",
            "in": "query",
            "description": "Top padding, overrides general padding on the top side. Accepts the same formats as `padding`.",
            "schema": {
              "examples": [
                "0.3",
                "30%",
                "100px"
              ],
              "type": [
                "string",
                "number"
              ]
            }
          },
          {
            "name": "referenceBox",
            "in": "query",
            "description": "[Advanced] `subjectBox` by default. When set to `originalImage`, the padding / margin will be around the original image\nand not the cropped subject.\n\nIt can lead to the subject disappearing when scaling is set to 'fill', for instance if the subject is on the left\nof a landscape image and outputSize is a square.\n\nMost use cases don't require this option. It is useful if you'd like to maintain subject positioning in the original image.\n\nCan't be provided if `removeBackground` is set to `false`\n\n(See positioning section of the documentation for more information)",
            "schema": {
              "default": "subjectBox",
              "enum": [
                "originalImage",
                "subjectBox"
              ],
              "examples": [
                "subjectBox",
                "originalImage"
              ],
              "type": "string"
            }
          },
          {
            "name": "removeBackground",
            "in": "query",
            "description": "If enabled (default), the background of the image will be removed using PhotoRoom's award-winning algorithm",
            "schema": {
              "default": true,
              "examples": [
                "true",
                "false"
              ],
              "type": "boolean"
            }
          },
          {
            "name": "scaling",
            "in": "query",
            "description": "Whether the subject should fit (default) or fill the output image\nIf set to `fit`, the empty pixels will be transparent\n\nCan only be provided if `imageUrl` or `imageFile` is provided",
            "schema": {
              "default": "fit",
              "enum": [
                "fill",
                "fit"
              ],
              "examples": [
                "fit",
                "fill"
              ],
              "type": "string"
            }
          },
          {
            "name": "shadow.mode",
            "in": "query",
            "description": "Shadow generation mode to use on the main image used by the API.\nIf set to `ai.soft`, a soft shadow will be generated\nIf set to `ai.hard`, a hard shadow will be generated\nIf set to `ai.floating`, a floating shadow will be generated",
            "schema": {
              "enum": [
                "ai.floating",
                "ai.hard",
                "ai.soft"
              ],
              "examples": [
                "ai.soft",
                "ai.hard",
                "ai.floating"
              ],
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "query",
            "description": "The ID of the template to render",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          },
          {
            "name": "textRemoval.mode",
            "in": "query",
            "description": "Text removal mode to use on the main image used by the API.\n\nIf set to `ai.artificial`, artificial text will be automatically removed.\nArtificial text includes all text added on an image through post-precessing, such as company name, watermarks, discount, etc.\n\nIf set to `ai.natural`, natural text will be automatically removed.\nNatural text includes text that naturally occurs in an image such as writing on buildings or clothings, road signs, etc.\n\nIf set to `ai.all`, all text (natural and artificial) will be automatically removed.",
            "schema": {
              "enum": [
                "ai.all",
                "ai.artificial",
                "ai.natural"
              ],
              "examples": [
                "ai.artificial",
                "ai.natural",
                "ai.all"
              ],
              "type": "string"
            }
          },
          {
            "name": "upscale.mode",
            "in": "query",
            "description": "(ALPHA) Warning: might get deprecated with a 2 weeks warning\n\nIf enabled, the input image will be upscaled (imageFile or imageUrl)\n\nThe input image (imageFile or imageUrl) must not exceed 1000x1000 pixels in dimensions when using `ai.fast` mode.\nThe input image (imageFile or imageUrl) must not exceed 512x512 pixels in dimensions when using `ai.slow` mode.\n\nThe upscaling process will enlarge the input image up to 4 times its original size. This will\nsignificantly increase the resolution and affect both the input processing and the final output dimensions.\n\nai.fast: This algorithm is optimized for speed and may not produce the highest quality results.\nai.slow: This algorithm is optimized for quality and may take more time to process.",
            "schema": {
              "enum": [
                "ai.fast",
                "ai.slow"
              ],
              "examples": [
                "ai.fast",
                "ai.slow"
              ],
              "type": "string"
            }
          },
          {
            "name": "verticalAlignment",
            "in": "query",
            "description": "[Advanced] Defines the vertical alignment of the cutout subject within its bounding box.\n\nSpecifying a custom vertical alignment will implicitly set `ignorePaddingAndSnapOnCroppedSides` to `false` for the vertical direction.",
            "schema": {
              "enum": [
                "bottom",
                "center",
                "top"
              ],
              "examples": [
                "top",
                "center",
                "bottom"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/image-response"
                }
              }
            },
            "headers": {
              "x-uncertainty-score": {
                "schema": {
                  "summary": "The uncertainty score of the cutout",
                  "description": "The uncertainty score is a number between 0 and 1. 0 means the model is very confident that the cutout is accurate, 1 means the model is unsure. For instance, shoes on a shoe box might give a higher uncertainty score as the model is unsure what to segment (shoes, box or both). Currently the model returns an uncertainty score only for images of objects. If an image contains humans, it will return the value -1."
                }
              },
              "pr-ai-background-seed": {
                "schema": {
                  "summary": "The seed used when generating the background",
                  "description": "This is the seed used when generating the background. Can be used to get similar looking results for the same prompt."
                }
              },
              "pr-texts-detected": {
                "schema": {
                  "summary": "The number of texts detected in the image",
                  "description": "When removing texts from an image, it will return the number of texts detected."
                }
              },
              "pr-unsupported-attributes": {
                "schema": {
                  "summary": "Unsupported Attributes (example: pr-unsupported-attributes='Unsupported attributes: background.inner')",
                  "description": "[Temporary] If the request contains attributes that are not supported by the API, this header will be returned with a list of the unsupported attributes. Soon to be replaced by a 400 Bad Request response."
                }
              },
              "pr-edit-further-url": {
                "schema": {
                  "summary": "A URL to open the result of the API call in the Photoroom webapp and edit it further",
                  "description": "If you're not fully satisfied with the result returned by the Image Editing API, it's possible to open the result image inside the Photoroom Web App, where you'll be able to adjust the result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edit-image-bad-request"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unknown-error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Image Editing v2 (Plus plan)",
        "description": "This endpoint processes an image, removing the background if specified, and applies various transformations such as scaling, padding, and margin adjustments. It accepts binary data for the image. If you want to send the URL of an image, please use the GET endpoint. For more details on the difference between the GET and POST endpoints, please have a look at our documentation: https://docs.photoroom.com/image-editing-api/which-endpoints-are-available. The output size, background color or image, and other parameters can be customized.",
        "servers": [
          {
            "url": "https://image-api.photoroom.com"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "background.color": {
                    "type": "string",
                    "description": "Color of the background. If omitted, background will be transparent unless `background.imageUrl` or `background.imageFile` is provided.\nCan be a hex color without the hash sign (example: `FF0000`, `FF0000EE`) or color name (examples: `red`, `blue`)\n\nCan't be provided if `removeBackground` is set to `false`"
                  },
                  "background.expandPrompt": {
                    "description": "If `ai.auto`, a pre-processing step is applied to expand the prompt into a longer form.\n\n`auto` and `never` are legacy values that will be removed in the next major version."
                  },
                  "background.guidance.imageFile": {
                    "type": "string",
                    "format": "binary",
                    "description": "Bytes of the image to use as a background image guidance. Only available in the POST request\n\nCan't be provided if `removeBackground` is set to `false`\n\nThe maximum size of the image is 30MB."
                  },
                  "background.guidance.scale": {
                    "type": "number",
                    "description": "How closely the generated background will be matching the guiding image, between 0 and 1.\n\nA value of 1 means it will match the guiding image as much as possible, a value of 0 means the guiding image will be ignored.\n\n(Only working when using the [new model](https://docs.photoroom.com/image-editing-api-plus-plan/ai-backgrounds#important-model-selection))"
                  },
                  "background.imageFile": {
                    "type": "string",
                    "format": "binary",
                    "description": "Bytes of the image to use as a background. Only available in the POST request\n\nCan't be provided if `removeBackground` is set to `false`\n\nThe maximum size of the image is 30MB.\n\nIf `background.imageFile` is provided, neither `background.imageUrl` nor `background.prompt` can be provided, and vice versa."
                  },
                  "background.negativePrompt": {
                    "type": "string",
                    "description": "(LEGACY) This parameter will only have an effect when using the previous AI Backgrounds model,\nwhich is used when setting the header: `pr-ai-background-model-version: 2`\n\nA negative prompt to use for guiding the background generation process;\nIf provided, the generation algorithm will try to avoid properties listed in the negativePrompt."
                  },
                  "background.prompt": {
                    "type": "string",
                    "description": "Prompt to use for guiding the background generation process.\n\nTips for writing high-quality prompts are available [in our documentation](https://docs.photoroom.com/image-editing-api-plus-plan/ai-backgrounds#how-to-write-a-high-quality-prompt).\n\nIf `background.prompt` is provided, neither `background.imageUrl` nor `background.imageFile` can be provided, and vice versa."
                  },
                  "background.scaling": {
                    "type": "string",
                    "description": "Whether the background should fit or fill (default) the output image\nIf set to `fit`, the empty pixels will be transparent\n\nCan only be provided if `background.imageUrl` or `background.imageFile` is provided"
                  },
                  "background.seed": {
                    "type": "number",
                    "description": "Seed used to generate the background. Can be used to get similar looking results for the same prompt."
                  },
                  "expand.mode": {
                    "type": "string",
                    "description": "Expand mode to use on the main image used by the API.\n\nIf set to `ai.auto`, all transparent pixels will automatically be filled based on the content of the current background (either the original background, if `removeBackground` has been set to `false`, or a static background, if `background.imageUrl` has been provided)\n\nExpand will rely on output size, subject position, and fitting mode."
                  },
                  "expand.seed": {
                    "type": "number",
                    "description": "Seed used to generate the background. Can be used to get similar looking results for the same prompt."
                  },
                  "export.format": {
                    "type": "string",
                    "description": "The format of the result image.\n\nDefault value is \"png\"."
                  },
                  "horizontalAlignment": {
                    "type": "string",
                    "description": "[Advanced] Defines the horizontal alignment of the cutout subject within its bounding box.\n\nSpecifying a custom horizontal alignment will implicitly set `ignorePaddingAndSnapOnCroppedSides` to `false` for the horizontal direction."
                  },
                  "ignorePaddingAndSnapOnCroppedSides": {
                    "type": "boolean",
                    "description": "If set to `true` (default), cropped sides of the subject will snap to the edges\nFor instance, for a portrait image cropped below the elbows, the subject will be aligned at the bottom\neven if a bottom padding is provided (but it will still respect bottom margin)\n\nCan't be provided if `removeBackground` is set to `false`\n\n(See positioning section of the documentation for more information)"
                  },
                  "imageFile": {
                    "type": "string",
                    "format": "binary",
                    "description": "Bytes of the main image used by the API. The POST endpoint accepts `imageFile` only.\n\nThe maximum size of the image is 30MB.\n\nIf you want to send the URL of an image, please instead use the GET endpoint with the argument `imageUrl`."
                  },
                  "lighting.mode": {
                    "type": "string",
                    "description": "Lighting mode to use on the main image used by the API.\nIf set to `ai.auto`, the lighting will be automatically adjusted"
                  },
                  "margin": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "General margin around the subject. Can be expressed as a number between 0 and 0.49,\na percentage string between 0% and 49% (e.g., \"30%\"), or a pixel value string (e.g., \"100px\").\nUnlike `padding`, margin is never ignored even on cropped sides of the subject.\nExpressed in a ratio of the output image size.\nSee positioning section of the documentation for more information.\n\nTips to assist with positioning are available [in our documentation](https://docs.photoroom.com/image-editing-api-plus-plan/positioning)."
                  },
                  "marginBottom": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Bottom Margin, overrides general margin on the bottom side. Accepts the same formats as `margin`."
                  },
                  "marginLeft": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Left Margin, overrides general margin on the left side. Accepts the same formats as `margin`."
                  },
                  "marginRight": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Right Margin, overrides general margin on the right side. Accepts the same formats as `margin`."
                  },
                  "marginTop": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Top Margin, overrides general margin on the top side. Accepts the same formats as `margin`."
                  },
                  "maxHeight": {
                    "type": "number",
                    "description": "Maximum output height. Can only be provided if `outputSize` is `originalImage` or `croppedSubject`.\nUseful for: redimensioning while keeping the aspect ratio"
                  },
                  "maxWidth": {
                    "type": "number",
                    "description": "Maximum output width. Can only be provided if `outputSize` is `originalImage` or `croppedSubject`.\nUseful for: resizing an image while keeping the aspect ratio"
                  },
                  "outputSize": {
                    "type": "string",
                    "description": "Output size of the image. In the form of either:\n- `widthxheight` for a custom size (example: `200x400`)\n- `originalImage` to keep the original image dimensions\n- `croppedSubject` to use the size of the foreground dimensions after cropping around it"
                  },
                  "padding": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "General padding around the subject. Can be expressed as a number between 0 and 0.49,\na percentage string between 0% and 49% (e.g., \"30%\"), or a pixel value string (e.g., \"100px\").\nUnlike `margin`, padding will be ignored on cropped sides of the subject if that option is enabled.\nExpressed in a ratio of the size of the document, minus margins (similar to CSS).\nSee positioning section of the documentation for more information.\n\nTips to assist with positioning are available [in our documentation](https://docs.photoroom.com/image-editing-api-plus-plan/positioning)."
                  },
                  "paddingBottom": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Bottom padding, overrides general padding on the bottom side. Accepts the same formats as `padding`."
                  },
                  "paddingLeft": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Left padding, overrides general padding on the left side. Accepts the same formats as `padding`."
                  },
                  "paddingRight": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Right padding, overrides general padding on the right side. Accepts the same formats as `padding`."
                  },
                  "paddingTop": {
                    "type": [
                      "string",
                      "number"
                    ],
                    "description": "Top padding, overrides general padding on the top side. Accepts the same formats as `padding`."
                  },
                  "referenceBox": {
                    "type": "string",
                    "description": "[Advanced] `subjectBox` by default. When set to `originalImage`, the padding / margin will be around the original image\nand not the cropped subject.\n\nIt can lead to the subject disappearing when scaling is set to 'fill', for instance if the subject is on the left\nof a landscape image and outputSize is a square.\n\nMost use cases don't require this option. It is useful if you'd like to maintain subject positioning in the original image.\n\nCan't be provided if `removeBackground` is set to `false`\n\n(See positioning section of the documentation for more information)"
                  },
                  "removeBackground": {
                    "type": "boolean",
                    "description": "If enabled (default), the background of the image will be removed using PhotoRoom's award-winning algorithm"
                  },
                  "scaling": {
                    "type": "string",
                    "description": "Whether the subject should fit (default) or fill the output image\nIf set to `fit`, the empty pixels will be transparent\n\nCan only be provided if `imageUrl` or `imageFile` is provided"
                  },
                  "shadow.mode": {
                    "type": "string",
                    "description": "Shadow generation mode to use on the main image used by the API.\nIf set to `ai.soft`, a soft shadow will be generated\nIf set to `ai.hard`, a hard shadow will be generated\nIf set to `ai.floating`, a floating shadow will be generated"
                  },
                  "templateId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the template to render"
                  },
                  "textRemoval.mode": {
                    "type": "string",
                    "description": "Text removal mode to use on the main image used by the API.\n\nIf set to `ai.artificial`, artificial text will be automatically removed.\nArtificial text includes all text added on an image through post-precessing, such as company name, watermarks, discount, etc.\n\nIf set to `ai.natural`, natural text will be automatically removed.\nNatural text includes text that naturally occurs in an image such as writing on buildings or clothings, road signs, etc.\n\nIf set to `ai.all`, all text (natural and artificial) will be automatically removed."
                  },
                  "upscale.mode": {
                    "type": "string",
                    "description": "(ALPHA) Warning: might get deprecated with a 2 weeks warning\n\nIf enabled, the input image will be upscaled (imageFile or imageUrl)\n\nThe input image (imageFile or imageUrl) must not exceed 1000x1000 pixels in dimensions when using `ai.fast` mode.\nThe input image (imageFile or imageUrl) must not exceed 512x512 pixels in dimensions when using `ai.slow` mode.\n\nThe upscaling process will enlarge the input image up to 4 times its original size. This will\nsignificantly increase the resolution and affect both the input processing and the final output dimensions.\n\nai.fast: This algorithm is optimized for speed and may not produce the highest quality results.\nai.slow: This algorithm is optimized for quality and may take more time to process."
                  },
                  "verticalAlignment": {
                    "type": "string",
                    "description": "[Advanced] Defines the vertical alignment of the cutout subject within its bounding box.\n\nSpecifying a custom vertical alignment will implicitly set `ignorePaddingAndSnapOnCroppedSides` to `false` for the vertical direction."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "$ref": "#/components/schemas/image-response"
                }
              }
            },
            "headers": {
              "x-uncertainty-score": {
                "schema": {
                  "summary": "The uncertainty score of the cutout",
                  "description": "The uncertainty score is a number between 0 and 1. 0 means the model is very confident that the cutout is accurate, 1 means the model is unsure. For instance, shoes on a shoe box might give a higher uncertainty score as the model is unsure what to segment (shoes, box or both). Currently the model returns an uncertainty score only for images of objects. If an image contains humans, it will return the value -1."
                }
              },
              "pr-ai-background-seed": {
                "schema": {
                  "summary": "The seed used when generating the background",
                  "description": "This is the seed used when generating the background. Can be used to get similar looking results for the same prompt."
                }
              },
              "pr-texts-detected": {
                "schema": {
                  "summary": "The number of texts detected in the image",
                  "description": "When removing texts from an image, it will return the number of texts detected."
                }
              },
              "pr-unsupported-attributes": {
                "schema": {
                  "summary": "Unsupported Attributes (example: pr-unsupported-attributes='Unsupported attributes: background.inner')",
                  "description": "[Temporary] If the request contains attributes that are not supported by the API, this header will be returned with a list of the unsupported attributes. Soon to be replaced by a 400 Bad Request response."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/edit-image-bad-request"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/payment-error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unknown-error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/render": {
      "get": {
        "operationId": "edit-image-get",
        "summary": "[LEGACY] Image Editing v1 (Plus plan)",
        "description": "Render an image using a template. A detailed tutorial is available [here](https://www.photoroom.com/api/docs/image-editing-api-documentation)",
        "servers": [
          {
            "url": "https://image-api.photoroom.com"
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The API key to authenticate the request",
              "title": "API Key",
              "example": "4a5b60936c3a934hqb3cf5838b390dc3d4dfc9da"
            },
            "required": false,
            "name": "apiKey",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "The ID of the template to render",
              "title": "Template ID",
              "example": "592dd982-4a1b-4cd9-ab11-21481d5a0064"
            },
            "required": true,
            "name": "templateId",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uri",
              "description": "The image URL to render",
              "title": "Image URL",
              "example": "https://s3.amazonaws.com/a.storyblok.com/f/191576/1024x1024/d25e1a99d7/sample-05.png"
            },
            "required": false,
            "name": "imageUrl",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "uri",
              "description": "Deprecated, use `imageUrl` instead.",
              "title": "Concept URL",
              "example": "https://s3.amazonaws.com/a.storyblok.com/f/191576/1024x1024/d25e1a99d7/sample-05.png",
              "deprecated": true
            },
            "required": false,
            "name": "conceptUrl",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "description": "The resulting image after rendering",
                  "title": "Resulting image",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "The message describing the error",
                          "title": "Message",
                          "example": "imageUrl: must be provided"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "Field Missing Error"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "detail": {
                          "type": "string",
                          "description": "The details of the error",
                          "title": "Details",
                          "example": "API credits exhausted. Visit https://app.photoroom.com/api-dashboard to purchase more API credits"
                        }
                      },
                      "required": [
                        "detail"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "Payment Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "The message describing the error",
                          "title": "Message",
                          "example": "An unexpected error occurred. Please try again later or contact support."
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "Unknown Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "edit-image-post",
        "summary": "[LEGACY] Image Editing v1 (Plus plan)",
        "description": "Render an image using a template. A detailed tutorial is available [here](https://www.photoroom.com/api/docs/image-editing-api-documentation)",
        "servers": [
          {
            "url": "https://image-api.photoroom.com"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/render-image-post-params"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "description": "The resulting image after rendering",
                  "title": "Resulting image",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "The message describing the error",
                          "title": "Message",
                          "example": "imageFile: must be provided"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "Field Missing Error"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "detail": {
                          "type": "string",
                          "description": "The details of the error",
                          "title": "Details",
                          "example": "API credits exhausted. Visit https://app.photoroom.com/api-dashboard to purchase more API credits"
                        }
                      },
                      "required": [
                        "detail"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "Payment Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "description": "The message describing the error",
                          "title": "Message",
                          "example": "An unexpected error occurred. Please try again later or contact support."
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  },
                  "required": [
                    "error"
                  ],
                  "title": "Unknown Error"
                }
              }
            }
          }
        }
      }
    }
  }
}